{"remainingRequest":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/src/components/common/tabbar/TabbarItem.vue?vue&type=style&index=0&id=78de4624&scoped=true&lang=css&","dependencies":[{"path":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/src/components/common/tabbar/TabbarItem.vue","mtime":1598954415509},{"path":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/node_modules/css-loader/dist/cjs.js","mtime":1599100838426},{"path":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1599100843884},{"path":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/node_modules/postcss-loader/src/index.js","mtime":1599100841048},{"path":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/node_modules/cache-loader/dist/cjs.js","mtime":1599100837787},{"path":"/Users/Apple/IdeaProjects/untitled/src/vue/vueTest/node_modules/vue-loader/lib/index.js","mtime":1599100843884}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYmJhci1pdGVtewogIGZsZXg6IDE7CiAgdGV4dC1hbGlnbjogY2VudGVyOwogIGhlaWdodDogNDlweDsKICBmb250LXNpemU6IDE0cHg7Cn0KCi50YWJiYXItaXRlbSBpbWd7CiAgd2lkdGg6IDI0cHg7CiAgaGVpZ2h0OiAyNHB4OwogIG1hcmdpbi10b3A6IDNweDsKICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwp9Ci5zZWxlY3RlZHsKICBjb2xvcjogcmVkOwp9Cg=="},{"version":3,"sources":["TabbarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TabbarItem.vue","sourceRoot":"src/components/common/tabbar","sourcesContent":["<template>\n  <div class=\"tabbar-item\" @click=\"itemClick\">\n    <div v-if=\"!isSelected\"><slot name=\"item-img\"></slot></div>\n    <div v-else><slot name=\"item-img-selected\"></slot></div>\n    <div :style=\"style\"><slot name=\"item-text\"></slot></div>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: \"TabbarItem\",\n    props:{\n      path : String,\n      color:{\n        type:String,\n        default:'red'\n      }\n    },\n    computed:{\n      isSelected(){\n        return this.$route.path.indexOf(this.path) !== -1\n      },\n      style(){\n         return this.isSelected ? {color: this.color }: {}\n      }\n    },\n    methods:{\n      itemClick(){\n        this.$router.replace(this.path)\n      }\n    }\n  }\n</script>\n\n<style scoped>\n\n  .tabbar-item{\n    flex: 1;\n    text-align: center;\n    height: 49px;\n    font-size: 14px;\n  }\n\n  .tabbar-item img{\n    width: 24px;\n    height: 24px;\n    margin-top: 3px;\n    vertical-align: middle;\n  }\n  .selected{\n    color: red;\n  }\n</style>"]}]}